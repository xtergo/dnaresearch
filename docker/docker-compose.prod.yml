version: '3.8'

services:
  portal:
    build:
      context: ..
      dockerfile: docker/Dockerfile.portal
      target: production
    ports:
      - "8080:80"
    environment:
      - REACT_APP_API_URL=http://localhost:7777
      - NODE_ENV=production
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dnaresearch_prod

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
      target: production
    ports:
      - "7777:7777"
    environment:
      - DATABASE_URL=postgresql://prod_user:${POSTGRES_PASSWORD:-dnaresearch123}@postgres:5432/dnaresearch_prod
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin123}
      - API_SECRET_KEY=${API_SECRET_KEY:-your-secret-key-change-in-production}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-jwt-secret-key-change-in-production}
      - DEBUG=false
      - PYTHONPATH=/app
    depends_on:
      - postgres
      - redis
      - minio
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7777/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dnaresearch_prod

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=prod_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dnaresearch123}
      - POSTGRES_DB=dnaresearch_prod
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./init-scripts/init-dev-db.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prod_user -d dnaresearch_prod"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dnaresearch_prod

  redis:
    image: redis:7-alpine
    volumes:
      - redis_prod_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dnaresearch_prod

  minio:
    image: minio/minio:latest
    environment:
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY:-minioadmin123}
    volumes:
      - minio_prod_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dnaresearch_prod

volumes:
  postgres_prod_data:
  redis_prod_data:
  minio_prod_data:

networks:
  dnaresearch_prod:
    driver: bridge